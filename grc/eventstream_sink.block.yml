# auto-generated by grc.converter

id: eventstream_sink
label: EventStream Sink
category: EVENTSTREAM

parameters:
-   id: type
    label: IO Type
    dtype: enum
    options: [complex, float, int, short, sc16, byte]
    option_labels: [Complex, Float, Int, Short, Complex Short, Byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            2*gr.sizeof_short, gr.sizeof_char]
    hide: part
-   id: num_streams
    label: Num Streams
    dtype: int
    default: '1'
    hide: part
-   id: nthreads
    label: Num Handler Threads
    dtype: int
    default: '8'
-   id: samplehistory
    label: Size of Sample History Ksamples
    dtype: int
    default: '64'
-   id: cb
    label: Thread Congestion Behavior
    dtype: enum
    default: drop
    options: [drop, block]
    option_labels: [DROP, BLOCK]
    option_attributes:
        raw: ['0', '1']
-   id: eb
    label: Early Behavior
    dtype: enum
    options: [discard, balk, asap]
    option_labels: [DISCARD, BALK, ASAP]
    option_attributes:
        raw: ['0', '1', '2']
-   id: ss
    label: Search Style
    dtype: enum
    default: binary
    options: [forward, reverse, binary]
    option_labels: [FORWARD, REVERSE, BINARY]
    option_attributes:
        raw: ['0', '1', '2']
    hide: part

inputs:
-   domain: stream
    dtype: ${ type }
    vlen: 1
    multiplicity: ${ num_streams }
-   domain: message
    id: schedule_event
    optional: true

outputs:
-   domain: message
    id: nconsumed
    optional: true
-   domain: message
    id: pdu_event
    optional: true
-   domain: message
    id: notify_handlers
    optional: true

templates:
    imports: import eventstream as es
    make: es.sink(${num_streams}*[${type.size}],${nthreads},${samplehistory},${eb.raw},${ss.raw},${cb.raw})

file_format: 1
