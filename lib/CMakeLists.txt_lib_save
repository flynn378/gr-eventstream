########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX
include(GrPython)
find_package(PythonLibs)
include_directories(${Boost_INCLUDE_DIR})
link_directories(${Boost_LIBRARY_DIRS})

list(APPEND eventstream_sources
    common.cc
    eh_pair.cc
    event_loop_thread.cc
    source_thread.cc
    handler.cc
    #handler_flowgraph.cc
    handler_print.cc
    handler_file.cc
    handler_pdu.cc
    handler_passthrough.cc
    queue.cc
    sink.cc
    source.cc
    vector_source.cc
    vector_sink.cc
    gen_vector.cc
    handler_insert_vector.cc
    trigger.cc
    trigger_edge_f.cc
    trigger_sample_timer.cc
    pyhandler_def.cc
    patterned_interleaver.cc
    exceptions.cc
    event_acceptor.cc
)

set(eventstream_sources "${eventstream_sources}" PARENT_SCOPE)
if(NOT eventstream_sources)
	MESSAGE(STATUS "No C++ sources... skipping lib/")
	return()
endif(NOT eventstream_sources)


add_library(gnuradio-eventstream SHARED ${eventstream_sources})
target_link_libraries(gnuradio-eventstream  Python::Python
${Boost_LIBRARIES}  gnuradio::gnuradio-runtime  gnuradio::gnuradio-filter gnuradio::gnuradio-pmt)
target_include_directories(gnuradio-eventstream
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/>
    PUBLIC $<INSTALL_INTERFACE:include>
  )
set_target_properties(gnuradio-eventstream PROPERTIES DEFINE_SYMBOL "gnuradio_eventstream_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-eventstream PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-eventstream)


########################################################################
# Build and register unit test
########################################################################
include(GrTest)

list(APPEND test_eventstream_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-eventstream)

if(NOT test_eventstream_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_eventstream_sources)

foreach(qa_file ${test_eventstream_sources})
    GR_ADD_CPP_TEST("eventstream_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)

GR_ADD_TEST(test_eventstream test-eventstream)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")


# list(APPEND test_eventstream_sources
#     qa_eventstream.cc
#     qa_eventstream_common.cc
#     qa_eventstream_source.cc
#     qa_eventstream_sink.cc
#     qa_eventstream_trigger.cc
# )

# add_library(eventstream SHARED ${eventstream_sources})
# target_link_libraries(eventstream ${eventstream_libs})
# 
# add_executable(test_eventstream ${test_eventstream_sources} test_all.cc)
# target_link_libraries(test_eventstream eventstream ${CPPUNIT_LIBRARIES})
# 
# 
# 
# ########################################################################
# # Install built library files
# ########################################################################
# INSTALL(TARGETS eventstream
#     LIBRARY DESTINATION lib${LIB_SUFFIX} # .so/.dylib file
#     ARCHIVE DESTINATION lib${LIB_SUFFIX} # .lib file
#     RUNTIME DESTINATION bin              # .dll file
# )
# 
# 
# #######################################################
# # STATIC LIB BUILD
# #######################################################
# if(ENABLE_STATIC_LIBS)
# 
#     add_library(eventstream_static STATIC ${eventstream_sources})
# 
#     set_target_properties(eventstream_static PROPERTIES OUTPUT_NAME eventstream)
#     install(TARGETS eventstream_static
#         LIBRARY DESTINATION lib${LIB_SUFFIX} # .so/.dylib file
#         ARCHIVE DESTINATION lib${LIB_SUFFIX} # .lib file
#         RUNTIME DESTINATION bin              # .dll file
#     )
# 
# endif()
# 
# 
# 
# ########################################################################
# # Build and register unit test
# ########################################################################
# FIND_PACKAGE(Boost COMPONENTS unit_test_framework)
# 
# INCLUDE(GrTest)
# SET(GR_TEST_TARGET_DEPS eventstream)
# #turn each test cpp file into an executable with an int main() function
# ADD_DEFINITIONS(-DBOOST_TEST_DYN_LINK -DBOOST_TEST_MAIN)

